{"version":3,"file":"static/js/87.5f774629.chunk.js","mappings":"kJACA,QAAyB,uBAAzB,EAA0I,sBAA1I,EAAuK,qBAAvK,EAAwM,0BAAxM,EAA4O,wBAA5O,EAA+Q,yB,uBCuI/Q,QApIA,WACE,MAAOA,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,IAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,IAClCK,EAAeC,IAAoBN,EAAAA,EAAAA,UAASO,OAAOC,WAAa,KAgBvE,OAbAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeA,KACnBJ,EAAiBC,OAAOC,WAAa,IAAI,EAG3C,OADAD,OAAOI,iBAAiB,SAAUD,GAC3B,IAAMH,OAAOK,oBAAoB,SAAUF,EAAa,GAC9D,KAQDG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLC,QAASpB,GAAaG,EAAW,OAAS,SAC1Cc,UAEFF,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAcL,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAcC,KAAK,IAAGN,SAAC,kBAGrCF,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAYL,SAAA,EAE1BC,EAAAA,EAAAA,KAAA,OACEG,UAAWC,EACXE,IAEMC,EADJpB,EACY,KACA,MAEdqB,QAASA,IAAMpB,GAAaD,GAC5BsB,IAAI,eAINZ,EAAAA,EAAAA,MAAA,MACEM,UAAS,GAAAO,OAAKN,EAAgB,KAAAM,OAAIvB,EAAWiB,EAAkB,IAC/DI,QAASA,IAAMpB,GAAY,GAAQW,SAAA,EAEnCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGK,KAAK,SAAQN,SAAC,aAEnBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGK,KAAK,UAASN,SAAC,cAEpBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGK,KAAK,YAAWN,SAAC,gBAEtBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGK,KAAK,WAAUN,SAAC,cAGpBV,IACCW,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEM,IAAKC,EAAQ,MACbE,IAAI,oBACJD,QArDUG,KAC1B5B,GAAa,GACb6B,SAASC,KAAKZ,MAAMa,SAAW,QAAQ,EAoDvBb,MAAO,CACLc,OAAQ,UACRC,MAAO,OACPC,OAAQ,uBAWvBnC,IAAcG,IACbe,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLiB,SAAU,QACVC,IAAK,EACLC,KAAM,EACNJ,MAAO,QACPC,OAAQ,QACRI,gBAAiB,QACjBC,OAAQ,IACRpB,QAAS,OACTqB,eAAgB,SAChBC,WAAY,UACZzB,UAEFC,EAAAA,EAAAA,KAAA,SACEM,IAAKC,EAAQ,MACbkB,UAAQ,EACRC,QAASA,IAAMxC,GAAY,GAC3Be,MAAO,CACLe,MAAO,MACPC,OAAQ,OACRU,aAAc,QAEhBC,UAAU,MAMf3C,IACCe,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLiB,SAAU,QACVC,IAAK,EACLC,KAAM,EACNJ,MAAO,QACPC,OAAQ,QACRI,gBAAiB,QACjBC,OAAQ,KACRvB,UAEFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,QAKrB,C","sources":["webpack://e-commerce/./src/components/NavBar/NavBar.module.css?b2e4","components/NavBar/Navbar.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"NavBar_navbar__qSIHZ\",\"gojoButton\":\"NavBar_gojoButton__CVhnw\",\"resetButton\":\"NavBar_resetButton__-b-kI\",\"title\":\"NavBar_title__Y11jY\",\"menu\":\"NavBar_menu__8xp77\",\"menuItems\":\"NavBar_menuItems__OPgo2\",\"menuBtn\":\"NavBar_menuBtn__vcQfL\",\"menuOpen\":\"NavBar_menuOpen__bwSgj\"};","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./NavBar.module.css\";\r\nimport GojoDomain from \"../GojoDomain/GojoDomain\";\r\n\r\nfunction NavBar() {\r\n  const [showVideo, setShowVideo] = useState(false);\r\n  const [showGojo, setShowGojo] = useState(false);\r\n  const [menuOpen, setMenuOpen] = useState(false); // Estado para o menu\r\n  const [isLargeScreen, setIsLargeScreen] = useState(window.innerWidth > 830);\r\n\r\n  // Atualiza o estado ao redimensionar a janela\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsLargeScreen(window.innerWidth > 830);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const handleOpenExpansion = () => {\r\n    setShowVideo(true);\r\n    document.body.style.overflow = \"hidden\"; // Impede o scroll\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Esconde todo o conteúdo quando a expansão ou o vídeo está ativo */}\r\n      <div\r\n        style={{\r\n          display: showVideo || showGojo ? \"none\" : \"block\",\r\n        }}\r\n      >\r\n        <nav className={styles.navbar}>\r\n          <a className={styles.title} href=\"/\">\r\n            Portfólio\r\n          </a>\r\n          <div className={styles.menu}>\r\n            {/* Botão de menu funcional */}\r\n            <img\r\n              className={styles.menuBtn}\r\n              src={\r\n                menuOpen\r\n                  ? require('../../Assets/Images/icons/marca-cruzada.png') // Ícone de \"fechar\"\r\n                  : require('../../Assets/Images/icons/menu-icon.png')     // Ícone de \"abrir\"\r\n              }\r\n              onClick={() => setMenuOpen(!menuOpen)} // Alterna o estado do menu\r\n              alt=\"Menu Icon\"\r\n            />\r\n\r\n            {/* Itens do menu */}\r\n            <ul\r\n              className={`${styles.menuItems} ${menuOpen ? styles.menuOpen : \"\"}`} // Exibe/esconde o menu\r\n              onClick={() => setMenuOpen(false)} // Fecha o menu ao clicar em um item\r\n            >\r\n              <li>\r\n                <a href=\"#about\">Sobre</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#skills\">Skills</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#projects\">Projetos</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#contact\">Contato</a>\r\n              </li>\r\n              {/* Renderiza o botão Gojo apenas em telas grandes */}\r\n              {isLargeScreen && (\r\n                <li>\r\n                  <img\r\n                    src={require('../GojoDomain/gojo-button.png')}\r\n                    alt=\"Abrir Expansão\"\r\n                    onClick={handleOpenExpansion}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      width: \"80px\",\r\n                      height: \"80px\",\r\n                    }}\r\n                  />\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Exibe o vídeo antes da expansão */}\r\n      {showVideo && !showGojo && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n            zIndex: 1000,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <video\r\n            src={require('../GojoDomain/Gojo2.mp4')}\r\n            autoPlay\r\n            onEnded={() => setShowGojo(true)}\r\n            style={{\r\n              width: \"80%\",\r\n              height: \"auto\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            controls={false}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Exibe a expansão */}\r\n      {showGojo && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <GojoDomain />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n"],"names":["showVideo","setShowVideo","useState","showGojo","setShowGojo","menuOpen","setMenuOpen","isLargeScreen","setIsLargeScreen","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","_jsxs","_Fragment","children","_jsx","style","display","className","styles","href","src","require","onClick","alt","concat","handleOpenExpansion","document","body","overflow","cursor","width","height","position","top","left","backgroundColor","zIndex","justifyContent","alignItems","autoPlay","onEnded","borderRadius","controls","GojoDomain"],"sourceRoot":""}